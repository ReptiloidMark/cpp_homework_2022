После создания вектора с помощью конструктора по умолчанию (без параметров) его ёмкость равна нулю, то есть он не занимает память. 
При добавлении первого элемента ёмкость увеличивается до 1. При добавлении второго элемента ёмкость увеличивается до 2. При добавлении третьего элемента ёмкость увеличивается до 4. 
То есть при каждом (2^n + 1)-ом элементе ёмкость вектора увеличивается до ближайшего бОльшего 2^n.

Если же задать начальное значение ёмкости вектора с помощью функции-члена reserve, то оно будет изменяться по такому же правилу. 
Например, если задать ёмкость вектора равной 8 и добавлять элементы в него, ёмкость увеличивается до 8, затем до 16, до 32 и т.д.

В предельном случае, когда вектор уже запросил большой объём памяти и на выполнение следующего запроса у ОС может не хватить ресурсов, возможны две ситуации. 
Если операционная система не может предоставить достаточный объём памяти, то будет вызвано исключение std::bad_alloc. 
Если же операционная система может предоставить запрошенный объём памяти, то ёмкость вектора будет увеличена до нужного значения, а количество свободной памяти на компьютере уменьшится.
